<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="org.shaneking.demo.performance.testing" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">100</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">830</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求=830*100" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;${skKey}1&quot;: &quot;skTestValue${__Random(1, 1000)}&quot;,&#xd;
  &quot;${skKey}2&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}3&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}4&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}5&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}6&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}7&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}8&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}9&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}10&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}11&quot;: &quot;skTestValue${__Random(1, 1000)}&quot;,&#xd;
  &quot;${skKey}12&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}13&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}14&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}15&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}16&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}17&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}18&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}19&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}20&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}21&quot;: &quot;skTestValue${__Random(1, 1000)}&quot;,&#xd;
  &quot;${skKey}22&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}23&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}24&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}25&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}26&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}27&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}28&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}29&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}30&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}31&quot;: &quot;skTestValue${__Random(1, 1000)}&quot;,&#xd;
  &quot;${skKey}32&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}33&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}34&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}35&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}36&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}37&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}38&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}39&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}40&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}41&quot;: &quot;skTestValue${__Random(1, 1000)}&quot;,&#xd;
  &quot;${skKey}42&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}43&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}44&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}45&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}46&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}47&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}48&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}49&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}50&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}51&quot;: &quot;skTestValue${__Random(1, 1000)}&quot;,&#xd;
  &quot;${skKey}52&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}53&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}54&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}55&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}56&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}57&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}58&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}59&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}60&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}61&quot;: &quot;skTestValue${__Random(1, 1000)}&quot;,&#xd;
  &quot;${skKey}62&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}63&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}64&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}65&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}66&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}67&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}68&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}69&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}70&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}71&quot;: &quot;skTestValue${__Random(1, 1000)}&quot;,&#xd;
  &quot;${skKey}72&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}73&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}74&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}75&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}76&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}77&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}78&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}79&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}80&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}81&quot;: &quot;skTestValue${__Random(1, 1000)}&quot;,&#xd;
  &quot;${skKey}82&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}83&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}84&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}85&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}86&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}87&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}88&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}89&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}90&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}91&quot;: &quot;skTestValue${__Random(1, 1000)}&quot;,&#xd;
  &quot;${skKey}92&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}93&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}94&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}95&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}96&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}97&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}98&quot;: &quot;${skValue}&quot;,&#xd;
  &quot;${skKey}99&quot;: &quot;${skValue}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/hello/mapStream</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="skKey" elementType="Argument">
              <stringProp name="Argument.name">skKey</stringProp>
              <stringProp name="Argument.value">skTestKey</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="随机变量" enabled="true">
          <stringProp name="maximumValue">10000000</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat">skValue</stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">skValue</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
